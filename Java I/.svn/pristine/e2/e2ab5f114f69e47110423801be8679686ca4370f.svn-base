package lab10;

import java.awt.Color;

import sedgewick.StdDraw;

public class Frog {
	private double posX;
	private double posY;
	private double halfHeight;
	private double halfWidth;
	private Color color;
	private int lives;
	private double speed;
	
	public Frog(double posX, double posY){
		this.posX = posX;
		this.posY = posY;
		this.halfHeight = 0.1;
		this.halfWidth = 0.1;
		this.color = new Color(0, 150, 0);
		this.lives = 5;
		this.speed = .1;
	}
	
	public double getPosX() {
		return posX;
	}

	public void setPosX(double posX) {
		this.posX = posX;
	}

	public double getPosY() {
		return posY;
	}

	public void setPosY(double posY) {
		this.posY = posY;
	}

	public double getHalfHeight() {
		return halfHeight;
	}

	public void setHalfHeight(double halfHeight) {
		this.halfHeight = halfHeight;
	}

	public double getHalfWidth() {
		return halfWidth;
	}

	public void setHalfWidth(double halfWidth) {
		this.halfWidth = halfWidth;
	}

	public Color getColor() {
		return color;
	}

	public void setColor(Color color) {
		this.color = color;
	}

	public int getLives() {
		return lives;
	}

	public void setLives(int lives) {
		this.lives = lives;
	}

	public double getSpeed() {
		return speed;
	}

	public void setSpeed(double speed) {
		this.speed = speed;
	}

	public void move(){
		if(ArcadeKeys.isKeyPressed(0,0)) posY = posY + speed;	//W up
		if(ArcadeKeys.isKeyPressed(0,1)) posX = posX - speed;	//A left
		if(ArcadeKeys.isKeyPressed(0,2)) posY = posY - speed;	//S down
		if(ArcadeKeys.isKeyPressed(0,3)) posX = posX + speed;	//D right
	}
	
	public boolean collide(Drawable d){
		if (this.getHalfHeight() + d.getHalfHeight() < Math.abs(this.getPosY() - d.getPosY())
				&& this.getHalfWidth() + d.getHalfWidth() < Math.abs(this.getPosX() - d.getPosX())){
			return true;				
		}
			else return false;
	}
	
	public void draw(){
		StdDraw.setPenColor(color);
		StdDraw.filledRectangle(posX, posY, halfWidth, halfHeight);
	}
	
}
