public class ClosestPairNaive {
    
    public final static double INF = java.lang.Double.POSITIVE_INFINITY;
    
    //
    // findClosestPair()
    //
    // Given a collection of nPoints points, find and ***print***
    //  * the closest pair of points
    //  * the distance between them
    // in the form "(x1, y1) (x2, y2) distance"
    //
    
    // INPUTS:
    //  - points sorted in nondecreasing order by X coordinate
    //  - points sorted in nondecreasing order by Y coordinate
    //
    
    public static void findClosestPair(XYPoint points[])
    {
	int nPoints = points.length;
	XYPoint p1 = null;
	XYPoint p2 = null;
	
	double minDist = INF;
	for(int j = 0; j <= nPoints-2; j++){
		for(int k = j+1; k <= nPoints-1; k++){
			double d = Math.sqrt(points[j].dist(points[k]));
			if(d < minDist){
				minDist = d;
				p1 = points[j];
				p2 = points[k];
			}
		}
	}
	if(p2.x < p1.x || (p1.x == p2.x && p2.y < p1.y)){
		XYPoint temp = p1;
		p1 = p2;
		p2 = temp;
	}
	System.out.println(p1.toString() + " " + p2.toString() + " " + minDist);
    }
}
